apiVersion: v1 # Jobs Default K8 API
kind: Pod # This tells kubernetes what kind of class it is working with
metadata:
  name: static-networks-jupyter #
  labels:
    app: static-networks-jupyter # Reference this in your service
spec:
  restartPolicy: Never # Options are OnFailure, and Never.
  hostNetwork: true # This option will allow the pod to use the host network for internet access
  tolerations: # This toleration allows the pod to be schedule onto gpu-only pod machines, remove this if you are not using gpu
    - key: "gpu"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
  volumes:
  - name: mnt
    hostPath:
      path: /mnt # Directory on the host machine to be mounted
  - name: external
    hostPath:
      path: /mnt/scratch07
  imagePullSecrets:
  - name: docker-credentials
  containers: # Container Level
  - name: static-networks-jupyter # Container name (Can be set to whatever)
    image: synicix/static-networks:latest # Docker Image hosted on Docker Hub
    ports:
    - containerPort: 8888
    volumeMounts: # Container reference to volumes define above
    - name: mnt # Name of the volume define above
      mountPath: /mnt # Location of where to mount it in the container
    - name: external
      mountPath: /external
    resources:
      limits:
        nvidia.com/gpu: 1
    env: # This section refers to secrets created under the user namespace and set them as enviorment variables
    - name: DJ_HOST
      valueFrom:
        secretKeyRef:
          name: datajoint-credentials
          key: DJ_HOST
    - name: DJ_USER
      valueFrom:
        secretKeyRef:
          name: datajoint-credentials
          key: DJ_USER
    - name: DJ_PASS
      valueFrom:
        secretKeyRef:
          name: datajoint-credentials
          key: DJ_PASS
    - name: GITHUB_USERNAME
      valueFrom:
        secretKeyRef:
          name: github-credentials
          key: GITHUB_USERNAME
    - name: GITHUB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: github-credentials
          key: GITHUB_PASSWORD
    command: ["/bin/bash"] # Entry point for the container
    args: ["-c", "git clone https://$(GITHUB_USERNAME):$(GITHUB_PASSWORD)@github.com/synicix/static-networks.git \ 
    && pip3 install -e static-networks \
    && rm -r neuro_data \
    && git clone https://$(GITHUB_USERNAME):$(GITHUB_PASSWORD)@github.com/Synicix/neuro_data.git \
    && pip3 install -e neuro_data \
    && pip3 install jupyter \
    && jupyter notebook --ip='0.0.0.0' --port=8888 --allow-root --no-browser --NotebookApp.token=${GITHUB_PASSWORD}"] # sh commands to clone and run python script

---
kind: Service
apiVersion: v1
metadata:
  name: static-networks-jupyter-service
spec:
  type: NodePort
  selector:
    app: static-networks-jupyter
  ports:
  - protocol: TCP
    nodePort: 30005 # Port might be taken so switch it to something else
    port: 8888
    targetPort: 8888
